{
  "module": "n8n Workflow Automation",
  "status": "complete",
  "timestamp": "${ISO_TIMESTAMP}",
  "components": [
    {
      "name": "n8n-main",
      "source": "infrastructure/docker/docker-compose.yml",
      "mode": "queue",
      "webhookUrlEnv": "WEBHOOK_URL",
      "db": {
        "type": "postgresdb",
        "env": ["DB_POSTGRESDB_HOST", "DB_POSTGRESDB_PORT", "DB_POSTGRESDB_DATABASE", "DB_POSTGRESDB_USER", "DB_POSTGRESDB_PASSWORD"]
      },
      "queue": {
        "redis": ["QUEUE_BULL_REDIS_HOST", "QUEUE_BULL_REDIS_PORT", "QUEUE_BULL_REDIS_PASSWORD", "QUEUE_BULL_REDIS_DB"],
        "timeoutThresholdMs": 10000
      },
      "security": {
        "encryptionKey": "N8N_ENCRYPTION_KEY",
        "host": "N8N_HOST",
        "protocol": "N8N_PROTOCOL"
      }
    },
    {
      "name": "n8n-worker-1",
      "source": "infrastructure/docker/docker-compose.yml",
      "mode": "queue",
      "command": "worker --concurrency=10",
      "sharesEncryptionKey": true,
      "health": {
        "queueHealthCheck": true
      }
    },
    {
      "name": "n8n (single instance alt)",
      "source": "infrastructure/docker/docker-compose.single.yml",
      "mode": "regular",
      "metrics": true,
      "executionPruning": {
        "enabled": true,
        "maxAgeHours": 336
      }
    },
    {
      "name": "Monitoring templates",
      "source": "infrastructure/monitoring/local/n8n-webhook-config.json",
      "webhookResponseTemplate": true,
      "metricsCollectionTemplate": true,
      "errorHandlingTemplate": true
    }
  ],
  "securityPosture": {
    "webhookExposure": "Requires WEBHOOK_URL; no built-in HMAC validation defined in repo",
    "ingressRateLimiting": "nginx rate limiting configured for /webhook/ paths (see Telegram module)",
    "secretManagement": "Uses env vars; ensure stored in GitHub/1Password for prod"
  },
  "issues": [
    {
      "id": "N8N-1",
      "severity": "MEDIUM",
      "title": "Webhook endpoints lack request authentication/signature",
      "location": "n8n webhooks (general); edge function posts without HMAC",
      "description": "n8n webhook endpoints are reachable via public URL (WEBHOOK_URL). Current integration posts from edge without a signature. If URL leaks, abuse/spam is possible.",
      "remediation": "Require HMAC signature (shared secret) or n8n Basic/Auth header validation on webhook; validate signature inside first node before processing. Pair with IP allowlists if possible."
    },
    {
      "id": "N8N-2",
      "severity": "MEDIUM",
      "title": "No dead-letter queue (DLQ) pattern documented for failed executions in queue mode",
      "location": "n8n queue (Bull/Redis) configuration",
      "description": "Queue mode is enabled with Redis, but there is no explicit DLQ/parking strategy documented for repeatedly failing executions.",
      "remediation": "Enable error workflows and persistence, capture failures via errorHandlingTemplate, add alerting, and consider a DLQ-like pattern (tag failures, route to review workflow)."
    },
    {
      "id": "N8N-3",
      "severity": "LOW",
      "title": "Workers lack explicit container resource limits",
      "location": "docker-compose (n8n-main, n8n-worker-1)",
      "description": "No CPU/memory limits are defined in compose; resource contention could degrade throughput or starve other services.",
      "remediation": "Add deploy.resource limits/ reservations or migrate to an orchestrator that enforces limits."
    },
    {
      "id": "N8N-4",
      "severity": "LOW",
      "title": "Missing end-to-end retry/backoff at workflow boundaries",
      "location": "Workflow nodes calling external services",
      "description": "While Supabase already retries outbound webhooks, retries/backoff within n8n workflows for downstream services are not documented.",
      "remediation": "Add retry/backoff nodes/policies at HTTP/Function nodes; centralize timing with exponential backoff and jitter; combine with idempotency keys for sinks."
    }
  ],
  "recommendations": [
    "Enforce webhook authentication (HMAC or Basic/Auth) and validate in first node",
    "Document and test failure handling path: retries, caps, alerts, and DLQ-like review",
    "Add container resource limits for n8n-main and workers",
    "Define workflow-level idempotency and retry policies for external calls",
    "Ensure encryption key, database, and Redis secrets come from secret managers"
  ]
}
