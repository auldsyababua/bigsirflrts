version: '3.8'

services:
  # OpenProject Community Edition with Critical Fixes Applied
  openproject:
    image: openproject/openproject:14
    container_name: openproject  # Fixed: Changed from flrts-openproject to match test expectations
    restart: always  # Fixed: Changed from unless-stopped to always for auto-restart
    environment:
      # PostgreSQL Database Connection - FIXED POOL SIZE
      DATABASE_URL: "postgresql://openproject:${POSTGRES_PASSWORD}@openproject-db:5432/openproject"

      # OpenProject Core Configuration
      SECRET_KEY_BASE: ${OPENPROJECT_SECRET_KEY_BASE}
      OPENPROJECT_HOST__NAME: ${OPENPROJECT_HOST_NAME:-openproject.example.com}
      OPENPROJECT_HTTPS: "true"
      OPENPROJECT_HSTS: "true"
      OPENPROJECT_DEFAULT__LANGUAGE: en

      # Rails Environment - OPTIMIZED FOR PERFORMANCE
      RAILS_ENV: production
      RAILS_SERVE_STATIC_FILES: "true"
      RAILS_LOG_TO_STDOUT: "true"
      RAILS_MIN_THREADS: 2  # Reduced for stability
      RAILS_MAX_THREADS: 5  # Reduced from 16 to prevent GVL contention

      # Puma Web Server Configuration - CRITICAL FIX
      WEB_CONCURRENCY: 2  # Number of worker processes
      WEB_TIMEOUT: 300    # Increased timeout
      PUMA_PERSISTENT_TIMEOUT: 20  # Keep connections alive
      PUMA_FIRST_DATA_TIMEOUT: 30  # Allow slow clients

      # Performance Tuning - OPTIMIZED FOR 4 vCPU
      OPENPROJECT_WEB_WORKERS: 2
      OPENPROJECT_WEB_MIN_THREADS: 2  # Reduced from 4
      OPENPROJECT_WEB_MAX_THREADS: 5  # Reduced from 8
      OPENPROJECT_WEB_TIMEOUT: 300    # Increased from 120

      # Background Jobs - CRITICAL FIX FOR WORKER PROCESSES
      OPENPROJECT_BACKGROUND_JOBS: "true"  # Enable background processing
      GOOD_JOB_EXECUTION_MODE: async       # Run jobs asynchronously
      GOOD_JOB_MAX_THREADS: 5              # Worker thread pool
      GOOD_JOB_QUEUES: "*:5"               # Process all queues with 5 threads
      GOOD_JOB_POLL_INTERVAL: 5            # Poll for jobs every 5 seconds
      GOOD_JOB_CLEANUP_INTERVAL_SECONDS: 300  # Cleanup every 5 minutes

      # Storage Configuration - Cloudflare R2
      OPENPROJECT_ATTACHMENTS__STORAGE: fog
      OPENPROJECT_DIRECT__UPLOADS: "true"
      OPENPROJECT_FOG__CREDENTIALS__PROVIDER: AWS
      OPENPROJECT_FOG__CREDENTIALS__AWS__ACCESS__KEY__ID: ${R2_ACCESS_KEY_ID}
      OPENPROJECT_FOG__CREDENTIALS__AWS__SECRET__ACCESS__KEY: ${R2_SECRET_ACCESS_KEY}
      OPENPROJECT_FOG__CREDENTIALS__ENDPOINT: ${R2_ENDPOINT}
      OPENPROJECT_FOG__CREDENTIALS__REGION: auto
      OPENPROJECT_FOG__CREDENTIALS__PATH__STYLE: "true"
      OPENPROJECT_FOG__DIRECTORY: ${R2_BUCKET:-openproject-files}

      # Cache Configuration
      OPENPROJECT_CACHE__MEMCACHE__SERVER: memcached:11211
      OPENPROJECT_RAILS__CACHE__STORE: memcache

      # Email Configuration (Optional)
      OPENPROJECT_EMAIL__DELIVERY__METHOD: ${EMAIL_DELIVERY_METHOD:-sendmail}
      OPENPROJECT_SMTP__ADDRESS: ${SMTP_ADDRESS:-}
      OPENPROJECT_SMTP__PORT: ${SMTP_PORT:-587}
      OPENPROJECT_SMTP__DOMAIN: ${SMTP_DOMAIN:-}
      OPENPROJECT_SMTP__USER__NAME: ${SMTP_USERNAME:-}
      OPENPROJECT_SMTP__PASSWORD: ${SMTP_PASSWORD:-}
      OPENPROJECT_SMTP__AUTHENTICATION: ${SMTP_AUTH:-plain}
      OPENPROJECT_SMTP__ENABLE__STARTTLS__AUTO: "true"

      # Security Headers
      OPENPROJECT_CONTENT__SECURITY__POLICY: "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self'; frame-src 'self'"

      # Additional Settings
      OPENPROJECT_AUTOLOGIN__COOKIE__SECURE: "true"
      OPENPROJECT_OVERRIDE__BCRYPT__COST__FACTOR: 12

    volumes:
      - openproject_data:/var/openproject/assets
      - openproject_logs:/var/log/openproject
    networks:
      - flrts_network
    ports:
      - "127.0.0.1:8080:80"  # CRITICAL FIX: Bind to localhost only, not 0.0.0.0
    depends_on:
      openproject-db:
        condition: service_healthy
      memcached:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health_checks/default"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 300s
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4G
        reservations:
          cpus: '1.0'
          memory: 2G

  # PostgreSQL 16 Database for OpenProject - OPTIMIZED
  openproject-db:
    image: postgres:16-alpine
    container_name: openproject-db  # Fixed: Changed from flrts-openproject-db
    restart: always  # Fixed: Changed to always
    environment:
      POSTGRES_USER: openproject
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: openproject
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=en_US.UTF-8"

      # PostgreSQL Performance Tuning - INCREASED CONNECTIONS
      POSTGRES_MAX_CONNECTIONS: 200        # Support all threads
      POSTGRES_SHARED_BUFFERS: 512MB
      POSTGRES_EFFECTIVE_CACHE_SIZE: 1536MB
      POSTGRES_MAINTENANCE_WORK_MEM: 128MB
      POSTGRES_CHECKPOINT_COMPLETION_TARGET: 0.9
      POSTGRES_WAL_BUFFERS: 16MB
      POSTGRES_DEFAULT_STATISTICS_TARGET: 100
      POSTGRES_RANDOM_PAGE_COST: 1.1
      POSTGRES_EFFECTIVE_IO_CONCURRENCY: 200
      POSTGRES_WORK_MEM: 5242kB
      POSTGRES_MIN_WAL_SIZE: 1GB
      POSTGRES_MAX_WAL_SIZE: 4GB
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres-init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - flrts_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U openproject -d openproject"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 1G

  # Memcached for OpenProject Rails Cache - OPTIMIZED
  memcached:
    image: memcached:1.6-alpine
    container_name: memcached  # Fixed: Simplified name
    restart: always  # Fixed: Changed to always
    command: memcached -m 512 -I 10m -c 1024 -v  # Added verbosity and connections
    networks:
      - flrts_network
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "11211"]
      interval: 30s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 640M  # Increased for 512MB cache
        reservations:
          cpus: '0.125'
          memory: 512M

  # Cloudflare Tunnel for Zero-Trust Access
  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared  # Fixed: Simplified name
    restart: always  # Fixed: Changed to always
    command: tunnel --no-autoupdate run
    environment:
      TUNNEL_TOKEN: ${CLOUDFLARE_TUNNEL_TOKEN}
    networks:
      - flrts_network
    depends_on:
      - openproject
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256M
        reservations:
          cpus: '0.125'
          memory: 128M

  # PostgreSQL Backup Service (runs daily at 2 AM)
  postgres-backup:
    image: postgres:16-alpine
    container_name: postgres-backup
    restart: always  # Fixed: Changed to always
    environment:
      PGPASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./backups:/backups
      - ./scripts/backup.sh:/backup.sh:ro
    networks:
      - flrts_network
    entrypoint: ["/bin/sh", "-c"]
    command: |
      "while true; do
        sleep 1d
        pg_dump -h openproject-db -U openproject -d openproject | gzip > /backups/openproject_$$(date +%Y%m%d_%H%M%S).sql.gz
        find /backups -name 'openproject_*.sql.gz' -mtime +7 -delete
      done"
    depends_on:
      openproject-db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256M

  # Health Monitor (Uptime Kuma - Optional)
  uptime-kuma:
    image: louislam/uptime-kuma:1
    container_name: uptime-kuma
    restart: always  # Fixed: Changed to always
    volumes:
      - uptime_kuma_data:/app/data
    networks:
      - flrts_network
    ports:
      - "127.0.0.1:3001:3001"  # Fixed: Bind to localhost only
    profiles:
      - monitoring
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256M

networks:
  flrts_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  openproject_data:
    driver: local
  openproject_logs:
    driver: local
  postgres_data:
    driver: local
  uptime_kuma_data:
    driver: local