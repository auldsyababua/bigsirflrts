version: "3.8"

services:
  # OpenProject - Rails application with direct Supabase connection
  openproject:
    image: openproject/openproject:14
    container_name: flrts-openproject
    restart: unless-stopped
    environment:
      # Supabase Database Connection - Session Mode (Port 5432)
      DATABASE_URL: "postgres://${SUPABASE_DB_USER}.${SUPABASE_PROJECT_REF}:${SUPABASE_DB_PASSWORD}@${SUPABASE_HOST}:5432/${SUPABASE_DB_NAME}?sslmode=require&application_name=openproject"

      # OpenProject Core Configuration
      SECRET_KEY_BASE: ${OPENPROJECT_SECRET_KEY_BASE}
      OPENPROJECT_HOST__NAME: ${OPENPROJECT_HOST_NAME:-localhost:8080}
      OPENPROJECT_HTTPS: ${OPENPROJECT_HTTPS:-false}
      OPENPROJECT_DEFAULT__LANGUAGE: en

      # Rails Environment
      RAILS_ENV: production
      RAILS_CACHE_STORE: memcache
      RAILS_MIN_THREADS: 4
      RAILS_MAX_THREADS: 16

      # Storage Configuration (R2 or Local)
      OPENPROJECT_ATTACHMENTS__STORAGE: ${STORAGE_TYPE:-file}
      OPENPROJECT_DIRECT__UPLOADS: ${DIRECT_UPLOADS:-false}

      # R2 Configuration (if using R2)
      OPENPROJECT_FOG__CREDENTIALS__PROVIDER: ${R2_PROVIDER:-}
      OPENPROJECT_FOG__CREDENTIALS__AWS__ACCESS__KEY__ID: ${R2_ACCESS_KEY_ID:-}
      OPENPROJECT_FOG__CREDENTIALS__AWS__SECRET__ACCESS__KEY: ${R2_SECRET_ACCESS_KEY:-}
      OPENPROJECT_FOG__CREDENTIALS__ENDPOINT: ${R2_ENDPOINT:-}
      OPENPROJECT_FOG__CREDENTIALS__REGION: ${R2_REGION:-auto}
      OPENPROJECT_FOG__DIRECTORY: ${R2_BUCKET:-}

      # Email Configuration (Optional)
      OPENPROJECT_EMAIL__DELIVERY__METHOD: ${EMAIL_DELIVERY_METHOD:-sendmail}
      OPENPROJECT_SMTP__ADDRESS: ${SMTP_ADDRESS:-}
      OPENPROJECT_SMTP__PORT: ${SMTP_PORT:-587}
      OPENPROJECT_SMTP__DOMAIN: ${SMTP_DOMAIN:-}
      OPENPROJECT_SMTP__USER__NAME: ${SMTP_USERNAME:-}
      OPENPROJECT_SMTP__PASSWORD: ${SMTP_PASSWORD:-}

      # Additional Settings
      OPENPROJECT_CACHE__MEMCACHE__SERVER: memcached:11211
      OPENPROJECT_RAILS__RELATIVE__URL__ROOT: ${OPENPROJECT_RELATIVE_URL_ROOT:-}

    volumes:
      # Local storage volume (if not using R2)
      - openproject_data:/var/openproject/assets
      - openproject_logs:/var/log/openproject
    networks:
      - flrts_network
    ports:
      - "8080:80"
    depends_on:
      - memcached
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health_checks/default"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 300s

  # FLRTS NLP Service - Node.js/TypeScript
  flrts-nlp:
    build:
      context: ./packages/nlp-service
      dockerfile: Dockerfile
    image: flrts-nlp:latest
    container_name: flrts-nlp-service
    restart: unless-stopped
    environment:
      # Service Configuration
      NODE_ENV: production
      PORT: 3000

      # OpenAI Configuration
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      OPENAI_MODEL: ${OPENAI_MODEL:-gpt-4o}
      OPENAI_TEMPERATURE: ${OPENAI_TEMPERATURE:-0.3}
      OPENAI_MAX_TOKENS: ${OPENAI_MAX_TOKENS:-2000}

      # OpenProject API Configuration
      OPENPROJECT_API_URL: http://openproject/api/v3
      OPENPROJECT_API_KEY: ${OPENPROJECT_API_KEY}

      # Supabase Connection (for FLRTS logs/metrics only)
      FLRTS_DB_URL: "postgres://${SUPABASE_DB_USER}.${SUPABASE_PROJECT_REF}:${SUPABASE_DB_PASSWORD}@${SUPABASE_HOST}:5432/${SUPABASE_DB_NAME}?sslmode=require&schema=flrts&application_name=flrts_nlp"

      # Timezone Configuration
      TZ: UTC
      TEAM_TIMEZONES: '{"Joel":"America/New_York","Bryan":"America/New_York","Taylor":"America/Chicago","Colin":"America/Los_Angeles","Bernie":"America/Los_Angeles","Ari":"America/Los_Angeles"}'

      # Service Discovery
      TELEGRAM_BOT_URL: http://telegram-bot:3001

      # Logging
      LOG_LEVEL: ${LOG_LEVEL:-info}
      LOG_FORMAT: json

    volumes:
      - ./packages/nlp-service:/app
      - /app/node_modules
    networks:
      - flrts_network
    ports:
      - "3000:3000"
    depends_on:
      - openproject
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Memcached for OpenProject
  memcached:
    image: memcached:1.6-alpine
    container_name: flrts-memcached
    restart: unless-stopped
    command: memcached -m 256
    networks:
      - flrts_network
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "11211"]
      interval: 30s
      timeout: 5s
      retries: 3

  # n8n Workflow Automation (Optional)
  n8n:
    image: n8nio/n8n:latest
    container_name: flrts-n8n
    restart: unless-stopped
    environment:
      # n8n Configuration
      N8N_BASIC_AUTH_ACTIVE: ${N8N_BASIC_AUTH_ACTIVE:-true}
      N8N_BASIC_AUTH_USER: ${N8N_BASIC_AUTH_USER:-admin}
      N8N_BASIC_AUTH_PASSWORD: ${N8N_BASIC_AUTH_PASSWORD}
      N8N_HOST: ${N8N_HOST:-localhost}
      N8N_PORT: 5678
      N8N_PROTOCOL: ${N8N_PROTOCOL:-http}
      WEBHOOK_URL: ${N8N_WEBHOOK_URL:-http://localhost:5678/}

      # Database Configuration (using Supabase)
      DB_TYPE: postgresdb
      DB_POSTGRESDB_HOST: ${SUPABASE_HOST}
      DB_POSTGRESDB_PORT: 5432
      DB_POSTGRESDB_DATABASE: ${SUPABASE_DB_NAME}
      DB_POSTGRESDB_USER: ${SUPABASE_DB_USER}.${SUPABASE_PROJECT_REF}
      DB_POSTGRESDB_PASSWORD: ${SUPABASE_DB_PASSWORD}
      DB_POSTGRESDB_SCHEMA: n8n
      DB_POSTGRESDB_SSL_ENABLED: true
      DB_POSTGRESDB_SSL_REJECT_UNAUTHORIZED: false

    volumes:
      - n8n_data:/home/node/.n8n
    networks:
      - flrts_network
    ports:
      - "5678:5678"
    profiles:
      - optional

  # Cloudflare Tunnel (Zero-Trust Access)
  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: flrts-cloudflared
    restart: unless-stopped
    command: tunnel --no-autoupdate run
    environment:
      TUNNEL_TOKEN: ${CLOUDFLARE_TUNNEL_TOKEN}
    networks:
      - flrts_network
    depends_on:
      - openproject
      - flrts-nlp

networks:
  flrts_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  openproject_data:
    driver: local
  openproject_logs:
    driver: local
  n8n_data:
    driver: local
