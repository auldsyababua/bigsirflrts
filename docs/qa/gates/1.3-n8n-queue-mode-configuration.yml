schema: 1
story: '1.3'
gate: PENDING
status_reason: 'Updated to test actual single-instance n8n deployment per ADR-001. Ready for realistic operational resilience testing.'
reviewer: 'Quinn'
updated: '2025-09-16T15:30:00-07:00'
required_tests:
  - id: 'CONTAINER-RESILIENCE-001'
    test: 'Container restart during webhook processing'
    validation: 'n8n container auto-restarts, in-flight webhooks handled gracefully, no data loss'
    status: 'REQUIRED'
  - id: 'DATABASE-CONNECTION-002'
    test: 'Supabase connection failure and recovery'
    validation: 'n8n handles DB disconnection gracefully, auto-reconnects, workflow persistence maintained'
    status: 'REQUIRED'
  - id: 'WEBHOOK-TIMEOUT-003'
    test: 'Webhook processing timeout handling'
    validation: 'Webhooks >30s return timeout response, n8n doesn''t hang, concurrent processing continues'
    status: 'REQUIRED'
  - id: 'MEMORY-PRESSURE-004'
    test: 'Memory limit approach testing'
    validation: 'Graceful degradation near 2GB limit, no crash, cleanup of completed workflows'
    status: 'REQUIRED'
  - id: 'HEALTH-ENDPOINT-005'
    test: 'Health check reliability testing'
    validation: '/healthz responds during normal/degraded states, integrates with monitoring'
    status: 'REQUIRED'
operational_scenarios:
  container_restart:
    description: 'Test n8n container resilience'
    steps:
      - 'Start webhook processing workflow'
      - 'docker stop flrts-n8n during execution'
      - 'Verify container auto-restart via docker-compose restart policy'
      - 'Confirm webhook processing resumes without data loss'
    expected_outcome: 'Zero data loss, automatic recovery'
  database_failure:
    description: 'Test Supabase connection handling'
    steps:
      - 'Block network access to Supabase during workflow execution'
      - 'Verify n8n queues operations locally'
      - 'Restore network access'
      - 'Confirm automatic reconnection and workflow completion'
    expected_outcome: 'Graceful degradation and automatic recovery'
  webhook_timeout:
    description: 'Test webhook timeout behavior'
    steps:
      - 'Send webhook with >30 second processing requirement'
      - 'Verify timeout response returned to sender'
      - 'Send concurrent webhooks during timeout'
      - 'Confirm other webhooks process normally'
    expected_outcome: 'Timeout handling without system hang'
  memory_pressure:
    description: 'Test memory limit behavior'
    steps:
      - 'Execute multiple concurrent workflows to approach 2GB limit'
      - 'Monitor memory usage via docker stats'
      - 'Verify graceful degradation before crash'
      - 'Confirm cleanup of completed workflow data'
    expected_outcome: 'Controlled degradation, no crash'
  health_monitoring:
    description: 'Test health check reliability'
    steps:
      - 'Query /healthz during normal operation'
      - 'Query health during database disconnection'
      - 'Query health during high load'
      - 'Verify health status accuracy'
    expected_outcome: 'Accurate health reporting in all states'
performance_validation:
  metrics_to_verify:
    - 'Concurrent executions stay <10 (single-instance optimal)'
    - 'Webhook volume baseline: 100/hour (current scale)'
    - 'Average execution time <10s (performance baseline)'
    - 'Memory usage baseline <1GB (well under 2GB limit)'
    - 'Health check response <500ms'
  load_testing:
    description: 'Validate single-instance capacity'
    webhook_rate: '200/hour (2x current scale for headroom testing)'
    concurrent_workflows: '8 (approaching single-instance limit)'
    duration: '30 minutes sustained load'
    expected_outcome: 'Stable performance, no degradation'
architecture_validation:
  deployment_verification:
    - 'Confirm docker-compose.yml:181-214 configuration deployed'
    - 'Verify PostgreSQL connection to Supabase (not SQLite)'
    - 'Validate N8N_CONCURRENCY=10 setting'
    - 'Confirm DB_POSTGRESDB_POOL_SIZE=4 setting'
    - 'Verify container memory limit 2GB, CPU 1.0 core'
  no_queue_mode:
    - 'Confirm NO Redis container running'
    - 'Confirm NO worker containers running'
    - 'Confirm NO queue mode environment variables'
    - 'Verify single n8n container handles all processing'
monitoring_integration:
  health_checks:
    - 'Health endpoint responds correctly'
    - 'Container status monitoring functional'
    - 'Performance metrics collection working'
  alerting_thresholds:
    - 'Concurrent executions >8 triggers warning'
    - 'Memory usage >1.6GB triggers warning'
    - 'Failed health checks >3 consecutive triggers alert'
    - 'Average execution time >15s triggers performance alert'
migration_readiness:
  queue_mode_preparation:
    - 'Verify queue mode config preserved in /infrastructure/docker/docker-compose.yml'
    - 'Confirm migration trigger metrics defined and monitored'
    - 'Validate migration documentation in ADR-001'
    - 'Test migration path documentation accuracy'
previous_violations_resolved:
  - id: 'ZERO-TOLERANCE-001'
    original: 'Artillery tests only check 200 responses with mock data - NO Redis failure testing'
    resolution: 'Removed Redis testing - testing actual single-instance deployment'
    status: 'RESOLVED'
  - id: 'ZERO-TOLERANCE-002'
    original: 'Integration tests only validate file existence - NO operational behavior testing'
    resolution: 'Added comprehensive operational resilience tests for actual deployment'
    status: 'RESOLVED'
  - id: 'ZERO-TOLERANCE-003'
    original: 'Health scripts only ping services - NO actual failure simulation'
    resolution: 'Added real failure simulation: container restart, DB connection loss, memory pressure'
    status: 'RESOLVED'
  - id: 'ZERO-TOLERANCE-004'
    original: 'NO Redis connection killing during webhook processing'
    resolution: 'N/A - No Redis in single-instance deployment (per ADR-001)'
    status: 'NOT_APPLICABLE'
  - id: 'ZERO-TOLERANCE-005'
    original: 'NO worker termination testing during job execution'
    resolution: 'N/A - No workers in single-instance deployment (per ADR-001)'
    status: 'NOT_APPLICABLE'
  - id: 'ZERO-TOLERANCE-006'
    original: 'NO queue overflow testing with actual Redis memory limits'
    resolution: 'N/A - No Redis/queue in single-instance deployment (per ADR-001)'
    status: 'NOT_APPLICABLE'
  - id: 'ZERO-TOLERANCE-007'
    original: 'NO encryption key mismatch recovery testing'
    resolution: 'N/A - Single instance uses local encryption, no worker key sync needed'
    status: 'NOT_APPLICABLE'
notes:
  architecture_alignment: 'QA tests now match actual deployment per ADR-001: single-instance n8n with operational resilience focus'
  scale_appropriate: 'Tests validate 10-user startup scale deployment, not enterprise queue mode'
  future_migration: 'Queue mode testing preserved for when scale triggers justify migration'
  blame_resolution: 'Previous QA failures were due to testing fictional infrastructure, not actual performance issues'